import { CipherGCMTypes } from "crypto";
import * as Joi from "joi";
import {
	ACCESS_TOKEN_EXPIRY,
	ACCESS_TOKEN_SECRET,
	APP_HOST,
	APP_NAME,
	APP_PORT,
	APP_VERSION,
	ConfigDefaultsConst,
	CRYPT_APP_KEY,
	CRYPT_AUTH_TAG_BYTE_LEN,
	CRYPT_BLOCK_CIPHER,
	CRYPT_ENCRYPTION_KEY_BYTE_LENGTH,
	CRYPT_INITIALIZATION_VECTOR_BYTE_LEN,
	CRYPT_SALT_BYTE_LEN,
	CRYPT_SALT_ITERATIONS,
	CRYPT_SALT_SCHEME,
	DB2,
	DB_DATABASE,
	DB_DIALECT,
	DB_GENERATOR,
	DB_HOST,
	DB_PASSWORD,
	DB_PORT,
	DB_SCHEMA,
	DB_USERNAME,
	DEVELOPMENT,
	ENTITIES,
	MARIA_DB,
	MIGRATIONS,
	MS_SQL,
	MY_SQL,
	NODE_ENV,
	POSTGRES,
	PRODUCTION,
	QUALITY_ASSURANCE,
	REDIS_HOST,
	REDIS_PASSWORD,
	REDIS_PORT,
	REDIS_USERNAME,
	REFRESH_TOKEN_EXPIRY,
	REFRESH_TOKEN_SECRET,
	SNOWFLAKE,
	SQLITE,
	USER_ACCEPTANCE_TESTING,
} from "../const";
import { ConfigValidationType, Dialect } from "../types";

export const ConfigValidation: Joi.ObjectSchema<ConfigValidationType> = Joi.object<ConfigValidationType>({
	[NODE_ENV]: Joi.string().required().valid(DEVELOPMENT, QUALITY_ASSURANCE, USER_ACCEPTANCE_TESTING, PRODUCTION).default(ConfigDefaultsConst.Environment),

	[ACCESS_TOKEN_SECRET]: Joi.string().required(),
	[ACCESS_TOKEN_EXPIRY]: Joi.string().optional().default(ConfigDefaultsConst.Token[ACCESS_TOKEN_EXPIRY]),
	[REFRESH_TOKEN_SECRET]: Joi.string().required(),
	[REFRESH_TOKEN_EXPIRY]: Joi.string().optional().default(ConfigDefaultsConst.Token[REFRESH_TOKEN_EXPIRY]),

	[DB_USERNAME]: Joi.string().required(),
	[DB_PASSWORD]: Joi.string().required(),
	[DB_DATABASE]: Joi.string().required(),
	[DB_HOST]: Joi.string().optional().default(ConfigDefaultsConst.Database[DB_HOST]),
	[DB_DIALECT]: Joi.string<Dialect>().optional().valid(MY_SQL, POSTGRES, SQLITE, MARIA_DB, MS_SQL, DB2, SNOWFLAKE).default(ConfigDefaultsConst.Database[DB_DIALECT]),
	[DB_PORT]: Joi.number().optional().default(ConfigDefaultsConst.Database[DB_PORT]),
	[DB_SCHEMA]: Joi.string().required(),
	[DB_GENERATOR]: Joi.string().optional().valid(MIGRATIONS, ENTITIES).default(ConfigDefaultsConst.Database[DB_GENERATOR]),

	[REDIS_HOST]: Joi.string().optional().default(ConfigDefaultsConst.Redis[REDIS_HOST]),
	[REDIS_PORT]: Joi.number().optional().default(ConfigDefaultsConst.Redis[REDIS_PORT]),
	[REDIS_USERNAME]: Joi.string().required(),
	[REDIS_PASSWORD]: Joi.string().required(),

	[CRYPT_APP_KEY]: Joi.string().required(),
	[CRYPT_BLOCK_CIPHER]: Joi.string<CipherGCMTypes>().optional().default(ConfigDefaultsConst.Crypt[CRYPT_BLOCK_CIPHER]),
	[CRYPT_AUTH_TAG_BYTE_LEN]: Joi.number().optional().default(ConfigDefaultsConst.Crypt[CRYPT_AUTH_TAG_BYTE_LEN]),
	[CRYPT_INITIALIZATION_VECTOR_BYTE_LEN]: Joi.number().optional().default(ConfigDefaultsConst.Crypt[CRYPT_INITIALIZATION_VECTOR_BYTE_LEN]),
	[CRYPT_ENCRYPTION_KEY_BYTE_LENGTH]: Joi.number().optional().default(ConfigDefaultsConst.Crypt[CRYPT_ENCRYPTION_KEY_BYTE_LENGTH]),
	[CRYPT_SALT_BYTE_LEN]: Joi.number().optional().default(ConfigDefaultsConst.Crypt[CRYPT_SALT_BYTE_LEN]),
	[CRYPT_SALT_ITERATIONS]: Joi.number().optional().default(ConfigDefaultsConst.Crypt[CRYPT_SALT_ITERATIONS]),
	[CRYPT_SALT_SCHEME]: Joi.string().optional().default(ConfigDefaultsConst.Crypt[CRYPT_SALT_SCHEME]),

	[APP_HOST]: Joi.string().optional().default(ConfigDefaultsConst.App[APP_HOST]),
	[APP_PORT]: Joi.number().optional().default(ConfigDefaultsConst.App[APP_PORT]),
	[APP_NAME]: Joi.string().required(),
	[APP_VERSION]: Joi.string().required(),
});
